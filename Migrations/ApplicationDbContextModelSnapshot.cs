// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WAI.Data;

namespace WAI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WAI.BudgetCategoryDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy");

                    b.Property<decimal>("Budgeted")
                        .HasColumnType("Money");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateLastModified");

                    b.Property<int?>("LastModifiedBy");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<byte[]>("ts")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("BudgetCategories");

                    b.HasData(
                        new { Id = 1, AddedBy = 1, Budgeted = 950.00m, DateAdded = new DateTime(2018, 6, 23, 19, 55, 22, 727, DateTimeKind.Utc), Name = "Mortgage" },
                        new { Id = 2, AddedBy = 1, Budgeted = 100.00m, DateAdded = new DateTime(2018, 6, 23, 19, 55, 22, 727, DateTimeKind.Utc), Name = "Auto Fuel" }
                    );
                });

            modelBuilder.Entity("WAI.BudgetTransactionDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddedBy");

                    b.Property<int?>("BudgetCategoryId");

                    b.Property<decimal>("Budgeted")
                        .HasColumnType("Money");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DateLastModified");

                    b.Property<int?>("LastModifiedBy");

                    b.Property<string>("Name")
                        .HasMaxLength(255);

                    b.Property<decimal>("Remaining")
                        .HasColumnType("Money");

                    b.Property<byte[]>("ts")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.HasIndex("BudgetCategoryId");

                    b.ToTable("BudgetTransactions");
                });

            modelBuilder.Entity("WAI.BudgetTransactionDataModel", b =>
                {
                    b.HasOne("WAI.BudgetCategoryDataModel", "BudgetCategory")
                        .WithMany("Transactions")
                        .HasForeignKey("BudgetCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
